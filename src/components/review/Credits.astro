---
import { toSentence } from "@/utils";
import Chips from "./Chips.astro";
import { twMerge } from "tailwind-merge";
import type { ChipsData } from "./Chips.astro";
import Credit from "./Credit.astro";
import Poster from "../Poster.astro";

export interface CreditsData extends ChipsData {
  title: string;
  year: string;
  slug: string;
  originalTitle: string | null;
  countries: string[];
  runtimeMinutes: number;
  directorNames: string[];
  principalCastNames: string[];
  writerNames: string[];
}

interface Props extends CreditsData {
  class?: string;
}

const props = Astro.props;
---

<aside
  id="credits"
  class={twMerge(
    "scroll-margin-top relative bg-subtle px-gutter pb-8 pt-8 tablet:pt-12",
    props.class
  )}
>
  <header
    class="flex items-center justify-center gap-x-2 pb-6 text-center text-2.5xl"
  >
    {props.title}{" "}
    <span class="text-sm font-light text-subtle">({props.year})</span>
  </header>
  <div
    class="mx-auto block tablet:float-left tablet:mr-gutter tablet:max-w-1/2"
  >
    <Poster
      slug={props.slug}
      title={props.title}
      year={props.year}
      class="poster-border mx-auto mb-4 mt-0 max-w-poster rounded-lg tablet:mx-0"
      sizes="(min-width: 248px) 248px, 100vw"
      width={248}
      height={372}
    />
  </div>

  <dl class="flex flex-col gap-y-4">
    {
      props.originalTitle && (
        <Credit title="Original Title">{props.originalTitle}</Credit>
      )
    }
    <Credit title="Financing">
      {toSentence(props.countries)}
    </Credit>
    <Credit title="Running Time">{`${props.runtimeMinutes} min`}</Credit>
    <Credit title="Directed by">
      {props.directorNames.map((name) => <div>{name}</div>)}
    </Credit>
    <Credit title="Written by">
      {props.writerNames.map((name) => <div>{name}</div>)}
    </Credit>
    <Credit title="Starring">
      {toSentence(props.principalCastNames)}
    </Credit>
  </dl>
  <div class="h-8 min-h-8"></div>
  <Chips castAndCrew={props.castAndCrew} collections={props.collections} />
  <div class="h-8 min-h-8"></div>
  <a
    href="#top"
    class="mx-auto flex max-w-1/2 cursor-pointer content-center items-center justify-center rounded-lg p-2 shadow-all shadow-border hover:shadow-border-accent"
  >
    Back to Top
    <svg viewBox="0 0 24 24" class="size-6 fill-default">
      <path
        d="M7.997 10l3.515-3.79a.672.672 0 0 1 .89-.076l.086.075L16 10 13 10.001V18h-2v-7.999L7.997 10z"
      ></path>
    </svg>
  </a>
</aside>
