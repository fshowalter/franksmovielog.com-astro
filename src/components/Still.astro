---
import { join } from "node:path";
import { getImage } from "astro:assets";
import type { HTMLAttributes } from "astro/types";
import type { ImageMetadata } from "astro";

interface Props extends HTMLAttributes<"img"> {
  slug: string;
  title: string;
  width: number;
  height: number;
  year: string | number;
  sizes?: string;
  class?: string;
}
const { width, height, sizes, title, year, slug, ...rest } = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/content/assets/stills/*.png"
);
const imagePath = `/${join("content", "assets", "stills")}/${slug}.png`;

if (!images[imagePath])
  throw new Error(
    `"${imagePath}" does not exist in glob: "src/assets/stills/*.png"`
  );

const stillFile = await images[imagePath]();

const widths = [0.25, 0.5, 1, 2].map((w) => w * width);

const optimizedImage = await getImage({
  src: stillFile.default,
  width,
  height,
  sizes: sizes || `(min-width: ${width}px) ${width}px, 100vw`,
  format: "avif",
  widths,
  quality: 80,
});
---

<img
  {...rest}
  {...optimizedImage.attributes}
  srcset={optimizedImage.srcSet.attribute}
  alt={`A still from ${title} (${year})`}
/>
