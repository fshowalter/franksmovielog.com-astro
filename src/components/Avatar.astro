---
import { join } from "node:path";
import { getImage } from "astro:assets";
import type { HTMLAttributes } from "astro/types";
import type { ImageMetadata } from "astro";

interface Props extends HTMLAttributes<"img"> {
  slug?: string;
  name?: string;
  width: number;
  height: number;
  class?: string;
}
const {
  width,
  height,
  name,
  class: className,
  slug = "default",
  ...rest
} = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/content/assets/avatars/*.png"
);

const imagePath = `/${join("content", "assets", "avatars")}/${slug}.png`;

if (!images[imagePath]) {
  throw new Error(
    `"${imagePath}" does not exist in glob: "src/assets/avatars/*.png"`
  );
}

const avatarFile = await images[imagePath]();

const optimizedImage = await getImage({
  src: avatarFile.default,
  width,
  height,
  format: "avif",
  densities: [1, 2],
  quality: 80,
});
---

{
  slug && (
    <img
      {...rest}
      {...optimizedImage.attributes}
      srcset={optimizedImage.srcSet.attribute}
      alt={name}
      class={className}
    />
  )
}
{
  !slug && (
    <div class={className}>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 16 16"
        fill="var(--bg-stripe)"
        width="100%"
      >
        <path
          clip-rule="evenodd"
          d="M16 8A8 8 0 110 8a8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zM8 9a5 5 0 00-4.546 2.916A5.986 5.986 0 008 14a5.986 5.986 0 004.546-2.084A5 5 0 008 9z"
          fill-rule="evenodd"
        />
      </svg>
    </div>
  )
}
