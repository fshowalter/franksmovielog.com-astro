---
import { join } from "node:path";
import { getImage } from "astro:assets";
import type { HTMLAttributes } from "astro/types";
import type { ImageMetadata } from "astro";

interface Props extends HTMLAttributes<"img"> {
  slug?: string;
  title?: string;
  width: number;
  height: number;
  year?: string | number;
  sizes: string;
  class?: string;
  fixedSize?: boolean;
}
const {
  width,
  height,
  sizes,
  title,
  year,
  fixedSize = false,
  slug = "default",
  ...rest
} = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/content/assets/posters/*.png"
);

const imagePath = `/${join("content", "assets", "posters")}/${slug}.png`;

if (!images[imagePath]) {
  throw new Error(
    `"${imagePath}" does not exist in glob: "src/assets/posters/*.png"`
  );
}

const posterFile = await images[imagePath]();

let multipliers = [0.25, 0.5, 1, 2];

if (fixedSize) {
  multipliers = [1, 2];
}

const widths = multipliers.map((w) => w * width);

const optimizedImage = await getImage({
  src: posterFile.default,
  width,
  height,
  sizes,
  format: "avif",
  widths,
  quality: 80,
});
---

<img
  {...rest}
  {...optimizedImage.attributes}
  srcset={optimizedImage.srcSet.attribute}
  alt={`A poster from ${title} (${year})`}
/>
