---
import Layout from "src/layouts/Layout.astro";
import { allUnderseenGems } from "src/api/underseenGems";
import { getFixedWidthPosters } from "src/api/posters";
import type { ListItemUnderseenGemData } from "src/components/Underseen";
import { ListItemPosterImageConfig } from "src/components/ListItemPoster";
import { Underseen } from "src/components/Underseen";

const { underseenGems, distinctGenres, distinctReleaseYears } =
  await allUnderseenGems();
const posters = await getFixedWidthPosters(ListItemPosterImageConfig);

underseenGems.sort((a, b) =>
  b.releaseSequence.localeCompare(a.releaseSequence)
);

const narrowedReviews = underseenGems.map((review) => {
  const listItemData: ListItemUnderseenGemData = {
    imdbId: review.imdbId,
    title: review.title,
    year: review.year,
    slug: review.slug,
    genres: review.genres,
    grade: review.grade,
    releaseSequence: review.releaseSequence,
    gradeValue: review.gradeValue,
    sortTitle: review.sortTitle,
  };

  return listItemData;
});
---

<Layout
  title="Reviews"
  description="A sortable and filterable list of every movie I've reviewed since 2012."
>
  <Underseen
    client:load
    initialSort="release-date-desc"
    distinctReleaseYears={distinctReleaseYears}
    distinctGenres={distinctGenres}
    posters={posters}
    underseenGems={narrowedReviews}
  />
</Layout>
